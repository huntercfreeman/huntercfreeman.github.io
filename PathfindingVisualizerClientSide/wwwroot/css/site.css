@import url('open-iconic/font/css/open-iconic-bootstrap.min.css');

html, body {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

app {
    position: relative;
    display: flex;
    flex-direction: column;
}

.top-row {
    height: 3.5rem;
    display: flex;
    align-items: center;
}

.main {
    flex: 1;
}

    .main .top-row {
        background-color: #e6e6e6;
        border-bottom: 1px solid #d6d5d5;
    }

.sidebar {
    background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
}

    .sidebar .top-row {
        background-color: rgba(0,0,0,0.4);
    }

    .sidebar .navbar-brand {
        font-size: 1.1rem;
    }

    .sidebar .oi {
        width: 2rem;
        font-size: 1.1rem;
        vertical-align: text-top;
        top: -2px;
    }

.nav-item {
    font-size: 0.9rem;
    padding-bottom: 0.5rem;
}

    .nav-item:first-of-type {
        padding-top: 1rem;
    }

    .nav-item:last-of-type {
        padding-bottom: 1rem;
    }

    .nav-item a {
        color: #d7d7d7;
        border-radius: 4px;
        height: 3rem;
        display: flex;
        align-items: center;
        line-height: 3rem;
    }

        .nav-item a.active {
            background-color: rgba(255,255,255,0.25);
            color: white;
        }

        .nav-item a:hover {
            background-color: rgba(255,255,255,0.1);
            color: white;
        }

.content {
    padding-top: 1.1rem;
}

.navbar-toggler {
    background-color: rgba(255, 255, 255, 0.1);
}

.valid.modified:not([type=checkbox]) {
    outline: 1px solid #26b050;
}

.invalid {
    outline: 1px solid red;
}

.validation-message {
    color: red;
}

@media (max-width: 767.98px) {
    .main .top-row {
        display: none;
    }
}

@media (min-width: 768px) {
    app {
        flex-direction: row;
    }

    .sidebar {
        width: 250px;
        height: 100vh;
        position: sticky;
        top: 0;
    }

    .main .top-row {
        position: sticky;
        top: 0;
    }

    .main > div {
        padding-left: 2rem !important;
        padding-right: 1.5rem !important;
    }

    .navbar-toggler {
        display: none;
    }

    .sidebar .collapse {
        /* Never collapse the sidebar for wide screens */
        display: block;
    }
}

.nodeRow {
    display: -webkit-box;
    margin-bottom: 0.5px;
}

.nodeRenderer {
    border: 1px solid blue;
    height: 30px;
    width: 30px;
    margin-right: 0.5px;
}

    .nodeRenderer.isBomb {
        background-image: url(../Images/diamond.svg);
        background-position: center;
        background-repeat: no-repeat;
    }

    .nodeRenderer.isFinish {
        background-color: orangered;
        background-image: url(../Images/circle.svg);
        background-position: center;
        background-repeat: no-repeat;
    }

        .nodeRenderer.isFinish.drawVisited {
            animation-name: fixIsFinish;
            animation-duration: 0.5s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }

            .nodeRenderer.isFinish.drawVisited.isShortest {
                animation-name: fixIsFinish;
                animation-duration: 0.5s;
                animation-iteration-count: 1;
                animation-fill-mode: forwards;
            }

    .nodeRenderer.isStart {
        background-color: lawngreen;
        background-image: url(../Images/triangletwo-right.svg);
        background-position: center;
        background-repeat: no-repeat;
    }

        .nodeRenderer.isStart.drawVisited {
            animation-name: fixIsStart;
            animation-duration: 0.5s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }

            .nodeRenderer.isStart.drawVisited.isShortest {
                animation-name: fixIsStart;
                animation-duration: 0.5s;
                animation-iteration-count: 1;
                animation-fill-mode: forwards;
            }

    .nodeRenderer.drawVisited {
        animation-name: animateDrawVisited;
        animation-duration: 2s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }

        .nodeRenderer.drawVisited.isShortest {
            animation-name: animateIsShortest;
            animation-duration: 0.5s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }
        
    .nodeRenderer.isWall {
        animation-name: animateIsWall;
        animation-duration: 2s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }

        .nodeRenderer.isWall.isShortest {
            animation-name: animateIsWallAndShortest;
            animation-duration: 2s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }

    .nodeRenderer.isWeighted {
        animation-name: animateIsWeighted;
        background-image: url(../Images/weight.svg);
        background-position: center;
        background-repeat: no-repeat;
        animation-duration: 2s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }

        .nodeRenderer.isWeighted.drawVisited {
            animation-name: animateIsWeightedAndVisited;
            animation-duration: 2s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }

            .nodeRenderer.isWeighted.drawVisited.isShortest {
                animation-name: animateIsWeightedAndVisitedAndShortest;
                animation-duration: 2s;
                animation-iteration-count: 1;
                animation-fill-mode: forwards;
            }

.topRow {
    height: 74px;
    background-color: darkslateblue;
    display: flex;
    color: white;
    justify-content: space-between;
    align-items: center;
}

.topRowButton {
    cursor: pointer;
    position: relative;
    color: white;
}

    .topRowButton.mainButton {
        background-color: lightseagreen;
    }

.dropdownItems {
    position: absolute;
    background-color: turquoise;
}

.controlRenderer {
    display: inline-flex;
    background-color: white;
    color: black;
    font-weight: bold;
    align-content: center;
}

    .controlRenderer:not(:last-child) {
        margin-right: 10px;
    }

    .controlRenderer.isDrawState {
        background-color: aquamarine;
    }

    .controlRenderer.setCursorPointer {
        cursor: pointer;
    }

@keyframes animateDrawVisited {
    0% {
        background-color: blue;
        border-radius: 75%;
    }
    25% {
        background-color: cornflowerblue;
        border-radius: 50%;
    }
    50% {
        background-color: dodgerblue;
        border-radius: 25%;
    }
    75% {
        background-color: lightskyblue;
        border-radius: 12.5%;
    }
    100% {
        background-color: skyblue;
    }
}

@keyframes animateIsShortest {
    0% {
        background-color: red;
        border-radius: 75%;
    }

    25% {
        background-color: orangered;
        border-radius: 50%;
    }

    50% {
        background-color: darkorange;
        border-radius: 25%;
    }

    75% {
        background-color: orange;
        border-radius: 12.5%;
    }

    100% {
        background-color: #FFD400;
    }
}

@keyframes fixIsStart {
    0% {
        background-color: lightskyblue;
        border-radius: 75%;
    }

    25% {
        background-color: dodgerblue;
        border-radius: 50%;
    }

    50% {
        background-color: blue;
        border-radius: 25%;
    }

    75% {
        background-color: greenyellow;
        border-radius: 12.5%;
    }

    100% {
        background-color: lawngreen;
    }
}

@keyframes fixIsFinish {
    0% {
        background-color: lightskyblue;
        border-radius: 75%;
    }

    25% {
        background-color: dodgerblue;
        border-radius: 50%;
    }

    50% {
        background-color: blue;
        border-radius: 25%;
    }

    75% {
        background-color: mediumpurple;
        border-radius: 12.5%;
    }

    100% {
        background-color: orangered;
    }
}

@keyframes animateIsWall {
    0% {
        background-color: lightgrey;
        border-radius: 75%;
    }

    25% {
        background-color: darkgrey;
        border-radius: 50%;
    }

    50% {
        background-color: slategrey;
        border-radius: 25%;
    }

    75% {
        background-color: darkslategrey;
        border-radius: 12.5%;
    }

    100% {
        background-color: black;
    }
}

@keyframes animateIsWallAndShortest {
    0% {
        background-color: lightgrey;
        border-radius: 75%;
    }

    25% {
        background-color: darkgrey;
        border-radius: 50%;
    }

    50% {
        background-color: slategrey;
        border-radius: 25%;
    }

    75% {
        background-color: darkslategrey;
        border-radius: 12.5%;
    }

    100% {
        background-color: black;
    }
}

@keyframes animateIsWeighted {
    0% {
        border-radius: 75%;
        background-color: beige;
    }

    25% {
        border-radius: 50%;
        background-color: beige;
    }

    50% {
        border-radius: 25%;
        background-color: beige;
    }

    75% {
        border-radius: 12.5%;
        background-color: beige;
    }

    100% {
        background-color: beige;
    }
}

@keyframes animateIsWeightedAndVisited {
    0% {
        background-color: blue;
        border-radius: 75%;
    }

    25% {
        background-color: cornflowerblue;
        border-radius: 50%;
    }

    50% {
        background-color: dodgerblue;
        border-radius: 25%;
    }

    75% {
        background-color: lightskyblue;
        border-radius: 12.5%;
    }

    100% {
        background-color: skyblue;
    }
}

@keyframes animateIsWeightedAndVisitedAndShortest {
    0% {
        background-color: red;
        border-radius: 75%;
    }

    25% {
        background-color: orangered;
        border-radius: 50%;
    }

    50% {
        background-color: darkorange;
        border-radius: 25%;
    }

    75% {
        background-color: orange;
        border-radius: 12.5%;
    }

    100% {
        background-color: #FFD400;
    }
}